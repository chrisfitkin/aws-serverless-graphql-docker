{
  "name": "aws-serverless-graphql-docker",
  "version": "1.1.0",
  "description": "A Serverless GraphQL API on AWS Lambda and DynamoDB with local Docker development.",
  "main": "handler.js",
  "repository": "https://github.com/chrisfitkin/aws-serverless-graphql-docker",
  "dependencies": {
    "apollo-server": "^2.0.5",
    "apollo-server-lambda": "^2.0.0-xrc.11",
    "aws-sdk": "^2.136.0",
    "dotenv": "^6.0.0",
    "dynamoose": "^0.8.7",
    "faker": "^4.1.0",
    "graphql": "^0.13.2",
    "graphql-tools": "^3.1.1",
    "lodash": "^4.17.10",
    "yamljs": "^0.3.0"
  },
  "devDependencies": {
    "chai": "^4.1.2",
    "chai-spies": "^1.0.0",
    "core-js": "^2.5.7",
    "eslint": "^5.5.0",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jsx-a11y": "^6.1.1",
    "eslint-plugin-react": "^7.11.1",
    "mocha": "^5.2.0",
    "nodemon": "^1.18.3",
    "nyc": "^13.0.1",
    "serverless": "^1.30.1",
    "serverless-dynamodb-local": "^0.2.33",
    "serverless-offline": "^3.25.9"
  },
  "scripts": {
    "test": "nyc mocha \"src/**/*.spec.js\" --timeout=3000",
    "test:only": "mocha \"src/**/*.spec.js\"",
    "dev": "npm run lint && nodemon --watch src --exec serverless offline",
    "dynamodb:install": "sls dynamodb install",
    "dynamodb": "sls dynamodb start",
    "dynamodb:debug": "SLS_DEBUG=* sls dynamodb start",
    "dynamodb:pid": "sudo lsof -i tcp:8000",
    "docker": "docker-compose stop && docker-compose up",
    "docker:stop": "docker-compose stop",
    "docker:build": "docker-compose build",
    "docker:rebuild": "docker-compose build --no-cache",
    "serverless": "serverless",
    "lint": "eslint src",
    "lint:fix": "eslint --fix src"
  },
  "author": "Chris Fitkin @chrisfitkin",
  "license": "MIT",
  "nyc": {
    "check-coverage": true,
    "per-file": true,
    "lines": 99,
    "statements": 99,
    "functions": 99,
    "branches": 99,
    "include": [
      "src/**/*.js",
      "src/*.js"
    ],
    "exclude": [
      "**/*.spec.js",
      "build"
    ]
  }
}
